<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.UserMapper">
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVo" resultType="com.lagou.domain.User">
        SELECT * FROM USER
        <where>
            <if test="true">
                and is_del !=1
            </if>
            <if test="username !=null">
                and name=#{username}
            </if>
            <if test="startCreateTime !=null and endCreateTime !=null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>
    <!--修改用户状态-->
    <update id="updateUserStatus" parameterType="com.lagou.domain.User">
            UPDATE user SET STATUS = #{status} ,update_time = #{update_time} WHERE id = #{id}
    </update>
    <!--用户登录-->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        SELECT * FROM USER WHERE phone=#{phone};
    </select>
    <!--用户注册-->
    <insert id="register" parameterType="com.lagou.domain.User">
        INSERT INTO USER VALUES(null ,#{name},#{portrait},#{phone},#{password},#{reg_ip},#{account_non_expired},
        #{credentials_non_expired},#{account_non_locked},#{status},#{is_del},#{createTime},#{updateTime})
    </insert>
    <!--根据userid清空中间表关联关系     public void deleteUserContextRole(Integer userId);-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userid}
    </delete>
    <!--分配角色-->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>
    <!--根据用户id 查询关联的角色信息-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.`id`=ur.`role_id` WHERE ur.`user_id`=#{userId};
    </select>
    <!--根据角色id 集合，查询角色所拥有的顶级菜单-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT
   DISTINCT m.*
   FROM roles r INNER JOIN role_menu_relation rm ON r.`id`=rm.`role_id`
             INNER JOIN menu m ON rm.`menu_id`=m.`id` WHERE m.`parent_id`=-1 AND r.`id` IN
             <foreach collection="list" item="item" open="(" separator="," close=")">
                 #{item}
             </foreach>
    </select>
    <!--查询子菜单-->
    <select id="findSubMenuByPid" parameterType="int" resultType="com.lagou.domain.Menu">
        SELECT * FROM menu WHERE parent_id=#{id};
    </select>
    <!--根据角色id集合，查询角色拥有的资源-->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Resource">
        SELECT
    DISTINCT r.*
    FROM resource r INNER JOIN role_resource_relation rr ON r.`id`=rr.`resource_id`
                INNER JOIN roles ro ON ro.`id`=rr.`role_id` WHERE ro.`id` IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>